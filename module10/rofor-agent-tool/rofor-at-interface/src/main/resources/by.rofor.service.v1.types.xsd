<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="urn:by:rofor:service:v1:types" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:tns="urn:by:rofor:service:v1:types" elementFormDefault="qualified" version="1.0.0">

	<xsd:simpleType name="GUIDType">
		<xsd:annotation>
			<xsd:documentation>implemented GUID/UUID, see IETF/RFC4122 or see ITU-T Rec. X.667 | ISO/IEC 9834-8
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="emailAddress">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[^@]+@[^\.]+\..+" />
			<!-- <xsd:pattern value="^([0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})$" /> -->
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="RequestHeaderType">
		<xsd:annotation>
			<xsd:documentation>A set of fields which are present in all requests to the Voyager service.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="RequestId" type="tns:GUIDType">
				<xsd:annotation>
					<xsd:documentation>A unique identifier for a request. Resent on
						retries.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="BaseRequestType" abstract="true">
		<xsd:sequence>
			<xsd:element name="Header" type="tns:RequestHeaderType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="BaseResponseType" abstract="true">
		<xsd:sequence>
			<xsd:element name="RequestId" type="tns:GUIDType">
				<xsd:annotation>
					<xsd:documentation>A unique identifier for the request that the response is
						associated with.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="BaseFilteredListRequestType">
		<xsd:complexContent>
			<xsd:extension base="tns:BaseRequestType">
				<xsd:sequence>
					<xsd:element name="DisplayStart" type="xsd:int" />
					<xsd:element name="DisplayLength" type="xsd:int" />
					<xsd:element name="Filter" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
					<xsd:element name="Order" type="xsd:string" minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="BaseFilteredListResponseType">
		<xsd:complexContent>
			<xsd:extension base="tns:BaseResponseType">
				<xsd:sequence>
					<xsd:element name="TotalRecords" type="xsd:long" />
					<xsd:element name="TotalDisplayRecords" type="xsd:long" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="BaseStatusResponseType">
		<xsd:complexContent>
			<xsd:extension base="tns:BaseResponseType">
				<xsd:sequence>
					<xsd:element name="Status" type="tns:StatusType" />
					<xsd:element name="Message" type="xsd:string" nillable="true" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="BaseFaultType" abstract="true">
		<xsd:sequence>
			<xsd:element name="Details" type="xsd:string" />
			<xsd:element name="ErrorCode" type="xsd:string" />
			<xsd:element name="LocalizedMessage" type="xsd:string" />
			<xsd:element name="RequestId" type="tns:GUIDType">
				<xsd:annotation>
					<xsd:documentation>A unique identifier for the request that the fault is
						associated with.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="ApplicationErrorType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="INVALID_PARAMETER" />
			<xsd:enumeration value="EMPTY_STRING" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="ApplicationFaultType">
		<xsd:complexContent mixed="false">
			<xsd:extension base="tns:BaseFaultType">
				<xsd:sequence>
					<xsd:element name="Error" type="tns:ApplicationErrorType" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="ApplicationFault" type="tns:ApplicationFaultType" />

	<xsd:complexType name="ExternalFaultType">
		<xsd:complexContent mixed="false">
			<xsd:extension base="tns:BaseFaultType">
				<xsd:sequence>
					<xsd:element name="ExternalRequest" type="xsd:string" nillable="true" />
					<xsd:element name="ExternalResponse" type="xsd:string" nillable="true" />
					<xsd:element name="ExternalUrl" type="xsd:string" nillable="true" />
					<xsd:element name="ExternalOperation" type="xsd:string" nillable="true">
						<xsd:annotation>
							<xsd:documentation>The external operation will be the name of the
								Proxy method, which may not be exactly the same
								as the External System operation name, but will at least be a
								close approximation.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="ExternalFault" type="tns:ExternalFaultType" />

	<xsd:complexType name="ServiceFaultType">
		<xsd:complexContent mixed="false">
			<xsd:extension base="tns:BaseFaultType">
				<xsd:sequence>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="ServiceFault" type="tns:ServiceFaultType" />

	<xsd:simpleType name="StatusType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="SUCCESS" />
			<xsd:enumeration value="FAILD" />
		</xsd:restriction>
	</xsd:simpleType>
</xsd:schema>